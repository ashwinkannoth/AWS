AWSTemplateFormatVersion: '2010-09-09'
Description: CloudFormation Template to enable CloudTrail logging for management and S3 events and capture VPC Flow Logs.

Resources:

  # S3 Bucket for CloudTrail and VPC Flow Logs
  LoggingBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub '${AWS::AccountId}-logging-bucket'
      VersioningConfiguration:
        Status: Enabled
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true

  # S3 Bucket Policy allowing CloudTrail and VPC Flow Logs to write
  LoggingBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref LoggingBucket
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: AWSCloudTrailWrite
            Effect: Allow
            Principal:
              Service: cloudtrail.amazonaws.com
            Action: s3:PutObject
            Resource: !Sub 'arn:aws:s3:::${LoggingBucket}/AWSLogs/${AWS::AccountId}/*'
            Condition:
              StringEquals:
                s3:x-amz-acl: bucket-owner-full-control
          - Sid: AWSCloudTrailBucketPermissionsCheck
            Effect: Allow
            Principal:
              Service: cloudtrail.amazonaws.com
            Action: s3:GetBucketAcl
            Resource: !Sub 'arn:aws:s3:::${LoggingBucket}'
          - Sid: AWSCloudTrailBucketPolicy
            Effect: Allow
            Principal:
              Service: cloudtrail.amazonaws.com
            Action: s3:GetBucketPolicy
            Resource: !Sub 'arn:aws:s3:::${LoggingBucket}'
          - Sid: VPCFlowLogsWrite
            Effect: Allow
            Principal:
              Service: vpc-flow-logs.amazonaws.com
            Action: s3:PutObject
            Resource: !Sub 'arn:aws:s3:::${LoggingBucket}/AWSLogs/${AWS::AccountId}/vpcflowlogs/*'
            Condition:
              StringEquals:
                s3:x-amz-acl: bucket-owner-full-control

  # CloudTrail for management and S3 events
  CloudTrail:
    Type: AWS::CloudTrail::Trail
    Properties:
      TrailName: !Sub '${AWS::AccountId}-cloudtrail'
      S3BucketName: !Ref LoggingBucket
      IsLogging: true
      IncludeGlobalServiceEvents: true
      IsMultiRegionTrail: true
      EnableLogFileValidation: true
      EventSelectors:
        - DataResources:
            - Type: AWS::S3::Object
              Values:
                - arn:aws:s3:::*
          IncludeManagementEvents: true
          ReadWriteType: All

  # IAM Role for VPC Flow Logs
  FlowLogsRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: 'vpc-flow-logs.amazonaws.com'
            Action: 'sts:AssumeRole'
      Policies:
        - PolicyName: VPCFlowLogsPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - 'logs:CreateLogGroup'
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
                  - 's3:PutObject'
                Resource: '*'

  # VPC Flow Logs
  VPCFlowLogs:
    Type: AWS::EC2::FlowLog
    Properties:
      DeliverLogsPermissionArn: !GetAtt FlowLogsRole.Arn
      LogGroupName: !Sub '/aws/vpc/flowlogs/${AWS::AccountId}'
      ResourceId: !Sub '${AWS::StackName}'
      ResourceType: VPC
      TrafficType: ALL
      LogDestinationType: s3
      LogDestination: !Sub 'arn:aws:s3:::${AWS::AccountId}-logging-bucket/AWSLogs/${AWS::AccountId}/vpcflowlogs/'

Outputs:
  CloudTrailARN:
    Description: The ARN of the CloudTrail
    Value: !GetAtt CloudTrail.Arn

  VPCFlowLogsLogGroup:
    Description: The name of the Log Group where VPC Flow Logs are stored
    Value: !Ref VPCFlowLogs
