AWSTemplateFormatVersion: '2010-09-09'
Description: >
  CloudFormation template to create an S3 bucket for storing logs from CloudTrail and VPC Flow Logs.

Resources:
  LogBucket:
    Type: AWS::S3::Bucket
    Properties: 
      BucketName: !Sub "${AWS::StackName}-log-bucket"
      VersioningConfiguration:
        Status: Enabled
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true

  LogBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref LogBucket
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: AllowCloudTrailAccess
            Effect: Allow
            Principal:
              Service: cloudtrail.amazonaws.com
            Action: s3:PutObject
            Resource: !Sub "${LogBucket.Arn}/cloudtrail/AWSLogs/${AWS::AccountId}/*"
            Condition:
              StringEquals:
                s3:x-amz-acl: bucket-owner-full-control
          - Sid: AllowVPCAccess
            Effect: Allow
            Principal:
              Service: vpc-flow-logs.amazonaws.com
            Action: s3:PutObject
            Resource: !Sub "${LogBucket.Arn}/vpcflowlogs/${AWS::AccountId}/vpc-01877e0cdf63832e3/*"
            Condition:
              StringEquals:
                s3:x-amz-acl: bucket-owner-full-control

  CloudTrail:
    Type: AWS::CloudTrail::Trail
    Properties:
      TrailName: !Sub "${AWS::StackName}-cloudtrail"
      S3BucketName: !Ref LogBucket
      S3KeyPrefix: "cloudtrail"
      IsLogging: true
      IncludeGlobalServiceEvents: true
      IsMultiRegionTrail: true
      EnableLogFileValidation: true
      EventSelectors:
        - ReadWriteType: All
          IncludeManagementEvents: true
          DataResources:
            - Type: AWS::S3::Object
              Values:
                - !Sub "arn:aws:s3:::${LogBucket}/*"

  VPCFlowLogs:
    Type: AWS::EC2::FlowLog
    Properties:
      DeliverLogsPermissionArn: !GetAtt VPCFlowLogRole.Arn
      LogDestinationType: s3
      LogDestination: !Sub "arn:aws:s3:::${LogBucket}/vpcflowlogs"
      ResourceId: vpc-01877e0cdf63832e3
      ResourceType: VPC
      TrafficType: ALL

  VPCFlowLogRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: vpc-flow-logs.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: VPCFlowLogPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: s3:PutObject
                Resource: !Sub "${LogBucket.Arn}/vpcflowlogs/*"
                Condition:
                  StringEquals:
                    s3:x-amz-acl: bucket-owner-full-control

Outputs:
  LogBucketName:
    Description: "Name of the S3 bucket storing logs"
    Value: !Ref LogBucket

  CloudTrailName:
    Description: "Name of the CloudTrail"
    Value: !Ref CloudTrail

  VPCFlowLogRoleArn:
    Description: "ARN of the IAM Role used by VPC Flow Logs"
    Value: !GetAtt VPCFlowLogRole.Arn
